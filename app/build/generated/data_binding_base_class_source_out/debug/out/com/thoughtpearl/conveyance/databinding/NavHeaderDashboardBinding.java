// Generated by view binder compiler. Do not edit!
package com.thoughtpearl.conveyance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.imageview.ShapeableImageView;
import com.thoughtpearl.conveyance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NavHeaderDashboardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView address;

  @NonNull
  public final TextView branchName;

  @NonNull
  public final TextView dateOfBirth;

  @NonNull
  public final TextView emailAddress;

  @NonNull
  public final TextView employeeId;

  @NonNull
  public final TextView fatherName;

  @NonNull
  public final TextView fullName;

  @NonNull
  public final Button logoutButton;

  @NonNull
  public final CardView profileDetails;

  @NonNull
  public final ShapeableImageView profileImage;

  @NonNull
  public final TextView uid;

  @NonNull
  public final CardView vehicleDetails;

  @NonNull
  public final TextView vehicleLable;

  @NonNull
  public final TextView vehicleName;

  @NonNull
  public final TextView vehicleNumber;

  private NavHeaderDashboardBinding(@NonNull LinearLayout rootView, @NonNull TextView address,
      @NonNull TextView branchName, @NonNull TextView dateOfBirth, @NonNull TextView emailAddress,
      @NonNull TextView employeeId, @NonNull TextView fatherName, @NonNull TextView fullName,
      @NonNull Button logoutButton, @NonNull CardView profileDetails,
      @NonNull ShapeableImageView profileImage, @NonNull TextView uid,
      @NonNull CardView vehicleDetails, @NonNull TextView vehicleLable,
      @NonNull TextView vehicleName, @NonNull TextView vehicleNumber) {
    this.rootView = rootView;
    this.address = address;
    this.branchName = branchName;
    this.dateOfBirth = dateOfBirth;
    this.emailAddress = emailAddress;
    this.employeeId = employeeId;
    this.fatherName = fatherName;
    this.fullName = fullName;
    this.logoutButton = logoutButton;
    this.profileDetails = profileDetails;
    this.profileImage = profileImage;
    this.uid = uid;
    this.vehicleDetails = vehicleDetails;
    this.vehicleLable = vehicleLable;
    this.vehicleName = vehicleName;
    this.vehicleNumber = vehicleNumber;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NavHeaderDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NavHeaderDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.nav_header_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NavHeaderDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      TextView address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.branch_name;
      TextView branchName = ViewBindings.findChildViewById(rootView, id);
      if (branchName == null) {
        break missingId;
      }

      id = R.id.date_of_birth;
      TextView dateOfBirth = ViewBindings.findChildViewById(rootView, id);
      if (dateOfBirth == null) {
        break missingId;
      }

      id = R.id.email_address;
      TextView emailAddress = ViewBindings.findChildViewById(rootView, id);
      if (emailAddress == null) {
        break missingId;
      }

      id = R.id.employee_id;
      TextView employeeId = ViewBindings.findChildViewById(rootView, id);
      if (employeeId == null) {
        break missingId;
      }

      id = R.id.father_name;
      TextView fatherName = ViewBindings.findChildViewById(rootView, id);
      if (fatherName == null) {
        break missingId;
      }

      id = R.id.full_name;
      TextView fullName = ViewBindings.findChildViewById(rootView, id);
      if (fullName == null) {
        break missingId;
      }

      id = R.id.logoutButton;
      Button logoutButton = ViewBindings.findChildViewById(rootView, id);
      if (logoutButton == null) {
        break missingId;
      }

      id = R.id.profile_details;
      CardView profileDetails = ViewBindings.findChildViewById(rootView, id);
      if (profileDetails == null) {
        break missingId;
      }

      id = R.id.profile_image;
      ShapeableImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.uid;
      TextView uid = ViewBindings.findChildViewById(rootView, id);
      if (uid == null) {
        break missingId;
      }

      id = R.id.vehicle_details;
      CardView vehicleDetails = ViewBindings.findChildViewById(rootView, id);
      if (vehicleDetails == null) {
        break missingId;
      }

      id = R.id.vehicle_lable;
      TextView vehicleLable = ViewBindings.findChildViewById(rootView, id);
      if (vehicleLable == null) {
        break missingId;
      }

      id = R.id.vehicle_name;
      TextView vehicleName = ViewBindings.findChildViewById(rootView, id);
      if (vehicleName == null) {
        break missingId;
      }

      id = R.id.vehicle_number;
      TextView vehicleNumber = ViewBindings.findChildViewById(rootView, id);
      if (vehicleNumber == null) {
        break missingId;
      }

      return new NavHeaderDashboardBinding((LinearLayout) rootView, address, branchName,
          dateOfBirth, emailAddress, employeeId, fatherName, fullName, logoutButton, profileDetails,
          profileImage, uid, vehicleDetails, vehicleLable, vehicleName, vehicleNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
