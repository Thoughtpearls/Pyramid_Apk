// Generated by view binder compiler. Do not edit!
package com.thoughtpearl.conveyance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.thoughtpearl.conveyance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DatePickerLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button cancelAlertButton;

  @NonNull
  public final TextView fromDateLabel;

  @NonNull
  public final TextView fromDateTextView;

  @NonNull
  public final TextView leaveReason;

  @NonNull
  public final EditText leaveReasonEditText;

  @NonNull
  public final Button okAlertButton;

  @NonNull
  public final TextView popupTitle;

  @NonNull
  public final TextView toDateLabel;

  @NonNull
  public final TextView toDateTextView;

  private DatePickerLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button cancelAlertButton, @NonNull TextView fromDateLabel,
      @NonNull TextView fromDateTextView, @NonNull TextView leaveReason,
      @NonNull EditText leaveReasonEditText, @NonNull Button okAlertButton,
      @NonNull TextView popupTitle, @NonNull TextView toDateLabel,
      @NonNull TextView toDateTextView) {
    this.rootView = rootView;
    this.cancelAlertButton = cancelAlertButton;
    this.fromDateLabel = fromDateLabel;
    this.fromDateTextView = fromDateTextView;
    this.leaveReason = leaveReason;
    this.leaveReasonEditText = leaveReasonEditText;
    this.okAlertButton = okAlertButton;
    this.popupTitle = popupTitle;
    this.toDateLabel = toDateLabel;
    this.toDateTextView = toDateTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DatePickerLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DatePickerLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.date_picker_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DatePickerLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelAlertButton;
      Button cancelAlertButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelAlertButton == null) {
        break missingId;
      }

      id = R.id.fromDateLabel;
      TextView fromDateLabel = ViewBindings.findChildViewById(rootView, id);
      if (fromDateLabel == null) {
        break missingId;
      }

      id = R.id.fromDateTextView;
      TextView fromDateTextView = ViewBindings.findChildViewById(rootView, id);
      if (fromDateTextView == null) {
        break missingId;
      }

      id = R.id.leaveReason;
      TextView leaveReason = ViewBindings.findChildViewById(rootView, id);
      if (leaveReason == null) {
        break missingId;
      }

      id = R.id.leaveReasonEditText;
      EditText leaveReasonEditText = ViewBindings.findChildViewById(rootView, id);
      if (leaveReasonEditText == null) {
        break missingId;
      }

      id = R.id.okAlertButton;
      Button okAlertButton = ViewBindings.findChildViewById(rootView, id);
      if (okAlertButton == null) {
        break missingId;
      }

      id = R.id.popupTitle;
      TextView popupTitle = ViewBindings.findChildViewById(rootView, id);
      if (popupTitle == null) {
        break missingId;
      }

      id = R.id.toDateLabel;
      TextView toDateLabel = ViewBindings.findChildViewById(rootView, id);
      if (toDateLabel == null) {
        break missingId;
      }

      id = R.id.toDateTextView;
      TextView toDateTextView = ViewBindings.findChildViewById(rootView, id);
      if (toDateTextView == null) {
        break missingId;
      }

      return new DatePickerLayoutBinding((ConstraintLayout) rootView, cancelAlertButton,
          fromDateLabel, fromDateTextView, leaveReason, leaveReasonEditText, okAlertButton,
          popupTitle, toDateLabel, toDateTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
