// Generated by view binder compiler. Do not edit!
package com.thoughtpearl.conveyance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.thoughtpearl.conveyance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CompleteRideLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView distanceTravelledLabelTextView;

  @NonNull
  public final TextView distanceTravelledTextView;

  @NonNull
  public final Button okAlertButton;

  @NonNull
  public final TextView popupTitle;

  @NonNull
  public final TextView rideAmountLabelTextView;

  @NonNull
  public final TextView rideAmountTextView;

  @NonNull
  public final TextView rideDateLabelTextView;

  @NonNull
  public final TextView rideDateTextView;

  @NonNull
  public final TextView rideDurationLabelTextView;

  @NonNull
  public final TextView rideDurationTextView;

  @NonNull
  public final TextView rideReasonLabelTextView;

  @NonNull
  public final TextView rideReasonTextView;

  private CompleteRideLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView distanceTravelledLabelTextView, @NonNull TextView distanceTravelledTextView,
      @NonNull Button okAlertButton, @NonNull TextView popupTitle,
      @NonNull TextView rideAmountLabelTextView, @NonNull TextView rideAmountTextView,
      @NonNull TextView rideDateLabelTextView, @NonNull TextView rideDateTextView,
      @NonNull TextView rideDurationLabelTextView, @NonNull TextView rideDurationTextView,
      @NonNull TextView rideReasonLabelTextView, @NonNull TextView rideReasonTextView) {
    this.rootView = rootView;
    this.distanceTravelledLabelTextView = distanceTravelledLabelTextView;
    this.distanceTravelledTextView = distanceTravelledTextView;
    this.okAlertButton = okAlertButton;
    this.popupTitle = popupTitle;
    this.rideAmountLabelTextView = rideAmountLabelTextView;
    this.rideAmountTextView = rideAmountTextView;
    this.rideDateLabelTextView = rideDateLabelTextView;
    this.rideDateTextView = rideDateTextView;
    this.rideDurationLabelTextView = rideDurationLabelTextView;
    this.rideDurationTextView = rideDurationTextView;
    this.rideReasonLabelTextView = rideReasonLabelTextView;
    this.rideReasonTextView = rideReasonTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CompleteRideLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CompleteRideLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.complete_ride_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CompleteRideLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.distanceTravelledLabelTextView;
      TextView distanceTravelledLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (distanceTravelledLabelTextView == null) {
        break missingId;
      }

      id = R.id.distanceTravelledTextView;
      TextView distanceTravelledTextView = ViewBindings.findChildViewById(rootView, id);
      if (distanceTravelledTextView == null) {
        break missingId;
      }

      id = R.id.okAlertButton;
      Button okAlertButton = ViewBindings.findChildViewById(rootView, id);
      if (okAlertButton == null) {
        break missingId;
      }

      id = R.id.popupTitle;
      TextView popupTitle = ViewBindings.findChildViewById(rootView, id);
      if (popupTitle == null) {
        break missingId;
      }

      id = R.id.rideAmountLabelTextView;
      TextView rideAmountLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (rideAmountLabelTextView == null) {
        break missingId;
      }

      id = R.id.rideAmountTextView;
      TextView rideAmountTextView = ViewBindings.findChildViewById(rootView, id);
      if (rideAmountTextView == null) {
        break missingId;
      }

      id = R.id.rideDateLabelTextView;
      TextView rideDateLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (rideDateLabelTextView == null) {
        break missingId;
      }

      id = R.id.rideDateTextView;
      TextView rideDateTextView = ViewBindings.findChildViewById(rootView, id);
      if (rideDateTextView == null) {
        break missingId;
      }

      id = R.id.rideDurationLabelTextView;
      TextView rideDurationLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (rideDurationLabelTextView == null) {
        break missingId;
      }

      id = R.id.rideDurationTextView;
      TextView rideDurationTextView = ViewBindings.findChildViewById(rootView, id);
      if (rideDurationTextView == null) {
        break missingId;
      }

      id = R.id.rideReasonLabelTextView;
      TextView rideReasonLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (rideReasonLabelTextView == null) {
        break missingId;
      }

      id = R.id.rideReasonTextView;
      TextView rideReasonTextView = ViewBindings.findChildViewById(rootView, id);
      if (rideReasonTextView == null) {
        break missingId;
      }

      return new CompleteRideLayoutBinding((ConstraintLayout) rootView,
          distanceTravelledLabelTextView, distanceTravelledTextView, okAlertButton, popupTitle,
          rideAmountLabelTextView, rideAmountTextView, rideDateLabelTextView, rideDateTextView,
          rideDurationLabelTextView, rideDurationTextView, rideReasonLabelTextView,
          rideReasonTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
