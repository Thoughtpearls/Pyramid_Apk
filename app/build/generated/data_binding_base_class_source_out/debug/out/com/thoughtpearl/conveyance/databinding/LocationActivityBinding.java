// Generated by view binder compiler. Do not edit!
package com.thoughtpearl.conveyance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.GridLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.gms.maps.MapView;
import com.google.android.material.appbar.AppBarLayout;
import com.thoughtpearl.conveyance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LocationActivityBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final TextView distance;

  @NonNull
  public final TextView duration;

  @NonNull
  public final GridLayout durationLayout;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final Button startUpdatesButton;

  @NonNull
  public final Button stopUpdatesButton;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView totalDistance;

  @NonNull
  public final TextView totalDuration;

  private LocationActivityBinding(@NonNull RelativeLayout rootView, @NonNull AppBarLayout appbar,
      @NonNull TextView distance, @NonNull TextView duration, @NonNull GridLayout durationLayout,
      @NonNull MapView mapView, @NonNull Button startUpdatesButton,
      @NonNull Button stopUpdatesButton, @NonNull Toolbar toolbar, @NonNull TextView totalDistance,
      @NonNull TextView totalDuration) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.distance = distance;
    this.duration = duration;
    this.durationLayout = durationLayout;
    this.mapView = mapView;
    this.startUpdatesButton = startUpdatesButton;
    this.stopUpdatesButton = stopUpdatesButton;
    this.toolbar = toolbar;
    this.totalDistance = totalDistance;
    this.totalDuration = totalDuration;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LocationActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LocationActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.location_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LocationActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      AppBarLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.distance;
      TextView distance = ViewBindings.findChildViewById(rootView, id);
      if (distance == null) {
        break missingId;
      }

      id = R.id.duration;
      TextView duration = ViewBindings.findChildViewById(rootView, id);
      if (duration == null) {
        break missingId;
      }

      id = R.id.duration_layout;
      GridLayout durationLayout = ViewBindings.findChildViewById(rootView, id);
      if (durationLayout == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.start_updates_button;
      Button startUpdatesButton = ViewBindings.findChildViewById(rootView, id);
      if (startUpdatesButton == null) {
        break missingId;
      }

      id = R.id.stop_updates_button;
      Button stopUpdatesButton = ViewBindings.findChildViewById(rootView, id);
      if (stopUpdatesButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.total_distance;
      TextView totalDistance = ViewBindings.findChildViewById(rootView, id);
      if (totalDistance == null) {
        break missingId;
      }

      id = R.id.total_duration;
      TextView totalDuration = ViewBindings.findChildViewById(rootView, id);
      if (totalDuration == null) {
        break missingId;
      }

      return new LocationActivityBinding((RelativeLayout) rootView, appbar, distance, duration,
          durationLayout, mapView, startUpdatesButton, stopUpdatesButton, toolbar, totalDistance,
          totalDuration);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
